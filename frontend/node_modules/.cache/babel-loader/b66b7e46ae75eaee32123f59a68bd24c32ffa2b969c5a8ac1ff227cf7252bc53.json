{"ast":null,"code":"import _objectSpread from\"/Users/mtejeshx37/Documents/2nd Year/Sem 3/Project/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{useForm}from'react-hook-form';import{Target,Plus,Edit,Trash2,TrendingUp,Activity,Scale,X}from'lucide-react';import toast from'react-hot-toast';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Goals=()=>{const[goals,setGoals]=useState([{id:'1',name:'Weight Loss',calories_goal:1800,protein_goal_g:150,carbs_goal_g:150,fat_goal_g:60,fiber_goal_g:25,sugar_goal_g:50,sodium_goal_mg:2300,weight_goal_kg:70,is_active:true,created_at:'2024-01-01'},{id:'2',name:'Muscle Building',calories_goal:2500,protein_goal_g:200,carbs_goal_g:250,fat_goal_g:80,fiber_goal_g:30,sugar_goal_g:60,sodium_goal_mg:2500,weight_goal_kg:80,is_active:false,created_at:'2024-01-15'}]);const[isCreating,setIsCreating]=useState(false);const[editingGoal,setEditingGoal]=useState(null);const[isLoading,setIsLoading]=useState(false);const{register,handleSubmit,reset,formState:{errors}}=useForm();const handleCreateGoal=async data=>{setIsLoading(true);try{// TODO: Implement API call to create goal\nconst newGoal=_objectSpread(_objectSpread({id:Date.now().toString()},data),{},{is_active:false,created_at:new Date().toISOString().split('T')[0]});setGoals([...goals,newGoal]);toast.success('Goal created successfully!');setIsCreating(false);reset();}catch(error){toast.error('Failed to create goal');}finally{setIsLoading(false);}};const handleUpdateGoal=async data=>{if(!editingGoal)return;setIsLoading(true);try{// TODO: Implement API call to update goal\nconst updatedGoals=goals.map(goal=>goal.id===editingGoal.id?_objectSpread(_objectSpread({},goal),data):goal);setGoals(updatedGoals);toast.success('Goal updated successfully!');setEditingGoal(null);reset();}catch(error){toast.error('Failed to update goal');}finally{setIsLoading(false);}};const handleDeleteGoal=async goalId=>{if(!confirm('Are you sure you want to delete this goal?'))return;try{// TODO: Implement API call to delete goal\nconst updatedGoals=goals.filter(goal=>goal.id!==goalId);setGoals(updatedGoals);toast.success('Goal deleted successfully!');}catch(error){toast.error('Failed to delete goal');}};const handleActivateGoal=async goalId=>{try{// TODO: Implement API call to activate goal\nconst updatedGoals=goals.map(goal=>_objectSpread(_objectSpread({},goal),{},{is_active:goal.id===goalId}));setGoals(updatedGoals);toast.success('Goal activated successfully!');}catch(error){toast.error('Failed to activate goal');}};const openCreateForm=()=>{setIsCreating(true);setEditingGoal(null);reset();};const openEditForm=goal=>{setEditingGoal(goal);setIsCreating(false);reset({name:goal.name,calories_goal:goal.calories_goal,protein_goal_g:goal.protein_goal_g,carbs_goal_g:goal.carbs_goal_g,fat_goal_g:goal.fat_goal_g,fiber_goal_g:goal.fiber_goal_g,sugar_goal_g:goal.sugar_goal_g,sodium_goal_mg:goal.sodium_goal_mg,weight_goal_kg:goal.weight_goal_kg});};const closeForms=()=>{setIsCreating(false);setEditingGoal(null);reset();};return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-6xl mx-auto p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900 mb-2\",children:\"Nutrition Goals\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Set and manage your nutrition targets\"})]}),(isCreating||editingGoal)&&/*#__PURE__*/_jsxs(\"div\",{className:\"card mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:isCreating?'Create New Goal':'Edit Goal'}),/*#__PURE__*/_jsx(\"button\",{onClick:closeForms,className:\"text-gray-400 hover:text-gray-600\",children:/*#__PURE__*/_jsx(X,{className:\"h-5 w-5\"})})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(isCreating?handleCreateGoal:handleUpdateGoal),className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Goal Name\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({id:\"name\",type:\"text\"},register('name',{required:'Goal name is required'})),{},{className:\"input-field \".concat(errors.name?'border-red-300 focus:ring-red-500':''),placeholder:\"e.g., Weight Loss, Muscle Building\"})),errors.name&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.name.message})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"weight_goal_kg\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:[/*#__PURE__*/_jsx(Scale,{className:\"inline-block w-4 h-4 mr-1\"}),\"Target Weight (kg)\"]}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({id:\"weight_goal_kg\",type:\"number\",step:\"0.1\"},register('weight_goal_kg',{min:20,max:300})),{},{className:\"input-field\",placeholder:\"Optional\"}))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"text-md font-medium text-gray-900 mb-4 flex items-center\",children:[/*#__PURE__*/_jsx(Target,{className:\"w-4 h-4 mr-2\"}),\"Daily Nutrition Targets\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"calories_goal\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:[/*#__PURE__*/_jsx(TrendingUp,{className:\"inline-block w-4 h-4 mr-1\"}),\"Calories\"]}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({id:\"calories_goal\",type:\"number\"},register('calories_goal',{required:'Calories goal is required',min:{value:800,message:'Minimum 800 calories'},max:{value:5000,message:'Maximum 5000 calories'}})),{},{className:\"input-field \".concat(errors.calories_goal?'border-red-300 focus:ring-red-500':'')})),errors.calories_goal&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.calories_goal.message})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"protein_goal_g\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Protein (g)\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({id:\"protein_goal_g\",type:\"number\"},register('protein_goal_g',{required:'Protein goal is required',min:{value:20,message:'Minimum 20g protein'},max:{value:500,message:'Maximum 500g protein'}})),{},{className:\"input-field \".concat(errors.protein_goal_g?'border-red-300 focus:ring-red-500':'')})),errors.protein_goal_g&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.protein_goal_g.message})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"carbs_goal_g\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Carbs (g)\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({id:\"carbs_goal_g\",type:\"number\"},register('carbs_goal_g',{required:'Carbs goal is required',min:{value:20,message:'Minimum 20g carbs'},max:{value:1000,message:'Maximum 1000g carbs'}})),{},{className:\"input-field \".concat(errors.carbs_goal_g?'border-red-300 focus:ring-red-500':'')})),errors.carbs_goal_g&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.carbs_goal_g.message})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fat_goal_g\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Fat (g)\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({id:\"fat_goal_g\",type:\"number\"},register('fat_goal_g',{required:'Fat goal is required',min:{value:20,message:'Minimum 20g fat'},max:{value:200,message:'Maximum 200g fat'}})),{},{className:\"input-field \".concat(errors.fat_goal_g?'border-red-300 focus:ring-red-500':'')})),errors.fat_goal_g&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.fat_goal_g.message})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fiber_goal_g\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Fiber (g)\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({id:\"fiber_goal_g\",type:\"number\"},register('fiber_goal_g',{required:'Fiber goal is required',min:{value:10,message:'Minimum 10g fiber'},max:{value:100,message:'Maximum 100g fiber'}})),{},{className:\"input-field \".concat(errors.fiber_goal_g?'border-red-300 focus:ring-red-500':'')})),errors.fiber_goal_g&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.fiber_goal_g.message})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"sugar_goal_g\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Sugar (g)\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({id:\"sugar_goal_g\",type:\"number\"},register('sugar_goal_g',{required:'Sugar goal is required',min:{value:0,message:'Minimum 0g sugar'},max:{value:200,message:'Maximum 200g sugar'}})),{},{className:\"input-field \".concat(errors.sugar_goal_g?'border-red-300 focus:ring-red-500':'')})),errors.sugar_goal_g&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.sugar_goal_g.message})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"sodium_goal_mg\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Sodium (mg)\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({id:\"sodium_goal_mg\",type:\"number\"},register('sodium_goal_mg',{required:'Sodium goal is required',min:{value:500,message:'Minimum 500mg sodium'},max:{value:5000,message:'Maximum 5000mg sodium'}})),{},{className:\"input-field \".concat(errors.sodium_goal_mg?'border-red-300 focus:ring-red-500':'')})),errors.sodium_goal_mg&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.sodium_goal_mg.message})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:closeForms,className:\"btn-secondary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading,className:\"btn-primary\",children:isLoading?'Saving...':isCreating?'Create Goal':'Update Goal'})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-900\",children:\"Your Goals\"}),!isCreating&&!editingGoal&&/*#__PURE__*/_jsxs(\"button\",{onClick:openCreateForm,className:\"btn-primary\",children:[/*#__PURE__*/_jsx(Plus,{className:\"inline-block w-4 h-4 mr-2\"}),\"Create New Goal\"]})]}),goals.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"card text-center py-12\",children:[/*#__PURE__*/_jsx(Target,{className:\"mx-auto h-12 w-12 text-gray-400 mb-4\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-2\",children:\"No goals yet\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:\"Create your first nutrition goal to get started\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:openCreateForm,className:\"btn-primary\",children:[/*#__PURE__*/_jsx(Plus,{className:\"inline-block w-4 h-4 mr-2\"}),\"Create Your First Goal\"]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:goals.map(goal=>/*#__PURE__*/_jsxs(\"div\",{className:\"card \".concat(goal.is_active?'ring-2 ring-primary-500':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:goal.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[\"Created \",goal.created_at]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[goal.is_active&&/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\",children:\"Active\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>openEditForm(goal),className:\"text-gray-400 hover:text-gray-600\",children:/*#__PURE__*/_jsx(Edit,{className:\"h-4 w-4\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteGoal(goal.id),className:\"text-red-400 hover:text-red-600\",children:/*#__PURE__*/_jsx(Trash2,{className:\"h-4 w-4\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-500\",children:\"Calories:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 font-medium\",children:goal.calories_goal})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-500\",children:\"Protein:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 font-medium\",children:[goal.protein_goal_g,\"g\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-500\",children:\"Carbs:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 font-medium\",children:[goal.carbs_goal_g,\"g\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-500\",children:\"Fat:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 font-medium\",children:[goal.fat_goal_g,\"g\"]})]})]}),goal.weight_goal_kg&&/*#__PURE__*/_jsxs(\"div\",{className:\"pt-3 border-t border-gray-200\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-500\",children:\"Target Weight:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 font-medium\",children:[goal.weight_goal_kg,\" kg\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pt-3 border-t border-gray-200\",children:!goal.is_active?/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleActivateGoal(goal.id),className:\"btn-primary w-full\",children:[/*#__PURE__*/_jsx(Activity,{className:\"inline-block w-4 h-4 mr-2\"}),\"Activate Goal\"]}):/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-sm text-green-600 font-medium\",children:\"\\u2713 This is your active goal\"})})]})]},goal.id))})]})]});};export default Goals;","map":{"version":3,"names":["React","useState","useForm","Target","Plus","Edit","Trash2","TrendingUp","Activity","Scale","X","toast","jsx","_jsx","jsxs","_jsxs","Goals","goals","setGoals","id","name","calories_goal","protein_goal_g","carbs_goal_g","fat_goal_g","fiber_goal_g","sugar_goal_g","sodium_goal_mg","weight_goal_kg","is_active","created_at","isCreating","setIsCreating","editingGoal","setEditingGoal","isLoading","setIsLoading","register","handleSubmit","reset","formState","errors","handleCreateGoal","data","newGoal","_objectSpread","Date","now","toString","toISOString","split","success","error","handleUpdateGoal","updatedGoals","map","goal","handleDeleteGoal","goalId","confirm","filter","handleActivateGoal","openCreateForm","openEditForm","closeForms","className","children","onClick","onSubmit","htmlFor","type","required","concat","placeholder","message","step","min","max","value","disabled","length"],"sources":["/Users/mtejeshx37/Documents/2nd Year/Sem 3/Project/frontend/src/pages/Goals.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Target, Plus, Edit, Trash2, TrendingUp, Activity, Scale, X } from 'lucide-react';\nimport toast from 'react-hot-toast';\n\ninterface NutritionGoal {\n  id: string;\n  name: string;\n  calories_goal: number;\n  protein_goal_g: number;\n  carbs_goal_g: number;\n  fat_goal_g: number;\n  fiber_goal_g: number;\n  sugar_goal_g: number;\n  sodium_goal_mg: number;\n  weight_goal_kg?: number;\n  is_active: boolean;\n  created_at: string;\n}\n\ninterface GoalFormData {\n  name: string;\n  calories_goal: number;\n  protein_goal_g: number;\n  carbs_goal_g: number;\n  fat_goal_g: number;\n  fiber_goal_g: number;\n  sugar_goal_g: number;\n  sodium_goal_mg: number;\n  weight_goal_kg?: number;\n}\n\nconst Goals: React.FC = () => {\n  const [goals, setGoals] = useState<NutritionGoal[]>([\n    {\n      id: '1',\n      name: 'Weight Loss',\n      calories_goal: 1800,\n      protein_goal_g: 150,\n      carbs_goal_g: 150,\n      fat_goal_g: 60,\n      fiber_goal_g: 25,\n      sugar_goal_g: 50,\n      sodium_goal_mg: 2300,\n      weight_goal_kg: 70,\n      is_active: true,\n      created_at: '2024-01-01',\n    },\n    {\n      id: '2',\n      name: 'Muscle Building',\n      calories_goal: 2500,\n      protein_goal_g: 200,\n      carbs_goal_g: 250,\n      fat_goal_g: 80,\n      fiber_goal_g: 30,\n      sugar_goal_g: 60,\n      sodium_goal_mg: 2500,\n      weight_goal_kg: 80,\n      is_active: false,\n      created_at: '2024-01-15',\n    },\n  ]);\n  const [isCreating, setIsCreating] = useState(false);\n  const [editingGoal, setEditingGoal] = useState<NutritionGoal | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<GoalFormData>();\n\n  const handleCreateGoal = async (data: GoalFormData) => {\n    setIsLoading(true);\n    try {\n      // TODO: Implement API call to create goal\n      const newGoal: NutritionGoal = {\n        id: Date.now().toString(),\n        ...data,\n        is_active: false,\n        created_at: new Date().toISOString().split('T')[0],\n      };\n      \n      setGoals([...goals, newGoal]);\n      toast.success('Goal created successfully!');\n      setIsCreating(false);\n      reset();\n    } catch (error) {\n      toast.error('Failed to create goal');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleUpdateGoal = async (data: GoalFormData) => {\n    if (!editingGoal) return;\n\n    setIsLoading(true);\n    try {\n      // TODO: Implement API call to update goal\n      const updatedGoals = goals.map(goal =>\n        goal.id === editingGoal.id ? { ...goal, ...data } : goal\n      );\n      setGoals(updatedGoals);\n      toast.success('Goal updated successfully!');\n      setEditingGoal(null);\n      reset();\n    } catch (error) {\n      toast.error('Failed to update goal');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDeleteGoal = async (goalId: string) => {\n    if (!confirm('Are you sure you want to delete this goal?')) return;\n\n    try {\n      // TODO: Implement API call to delete goal\n      const updatedGoals = goals.filter(goal => goal.id !== goalId);\n      setGoals(updatedGoals);\n      toast.success('Goal deleted successfully!');\n    } catch (error) {\n      toast.error('Failed to delete goal');\n    }\n  };\n\n  const handleActivateGoal = async (goalId: string) => {\n    try {\n      // TODO: Implement API call to activate goal\n      const updatedGoals = goals.map(goal => ({\n        ...goal,\n        is_active: goal.id === goalId,\n      }));\n      setGoals(updatedGoals);\n      toast.success('Goal activated successfully!');\n    } catch (error) {\n      toast.error('Failed to activate goal');\n    }\n  };\n\n  const openCreateForm = () => {\n    setIsCreating(true);\n    setEditingGoal(null);\n    reset();\n  };\n\n  const openEditForm = (goal: NutritionGoal) => {\n    setEditingGoal(goal);\n    setIsCreating(false);\n    reset({\n      name: goal.name,\n      calories_goal: goal.calories_goal,\n      protein_goal_g: goal.protein_goal_g,\n      carbs_goal_g: goal.carbs_goal_g,\n      fat_goal_g: goal.fat_goal_g,\n      fiber_goal_g: goal.fiber_goal_g,\n      sugar_goal_g: goal.sugar_goal_g,\n      sodium_goal_mg: goal.sodium_goal_mg,\n      weight_goal_kg: goal.weight_goal_kg,\n    });\n  };\n\n  const closeForms = () => {\n    setIsCreating(false);\n    setEditingGoal(null);\n    reset();\n  };\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Nutrition Goals</h1>\n        <p className=\"text-gray-600\">Set and manage your nutrition targets</p>\n      </div>\n\n      {/* Create/Edit Goal Form */}\n      {(isCreating || editingGoal) && (\n        <div className=\"card mb-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">\n              {isCreating ? 'Create New Goal' : 'Edit Goal'}\n            </h3>\n            <button\n              onClick={closeForms}\n              className=\"text-gray-400 hover:text-gray-600\"\n            >\n              <X className=\"h-5 w-5\" />\n            </button>\n          </div>\n\n          <form onSubmit={handleSubmit(isCreating ? handleCreateGoal : handleUpdateGoal)} className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Goal Name\n                </label>\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  {...register('name', { required: 'Goal name is required' })}\n                  className={`input-field ${errors.name ? 'border-red-300 focus:ring-red-500' : ''}`}\n                  placeholder=\"e.g., Weight Loss, Muscle Building\"\n                />\n                {errors.name && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.name.message}</p>\n                )}\n              </div>\n\n              <div>\n                <label htmlFor=\"weight_goal_kg\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  <Scale className=\"inline-block w-4 h-4 mr-1\" />\n                  Target Weight (kg)\n                </label>\n                <input\n                  id=\"weight_goal_kg\"\n                  type=\"number\"\n                  step=\"0.1\"\n                  {...register('weight_goal_kg', { min: 20, max: 300 })}\n                  className=\"input-field\"\n                  placeholder=\"Optional\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <h4 className=\"text-md font-medium text-gray-900 mb-4 flex items-center\">\n                <Target className=\"w-4 h-4 mr-2\" />\n                Daily Nutrition Targets\n              </h4>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                <div>\n                  <label htmlFor=\"calories_goal\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    <TrendingUp className=\"inline-block w-4 h-4 mr-1\" />\n                    Calories\n                  </label>\n                  <input\n                    id=\"calories_goal\"\n                    type=\"number\"\n                    {...register('calories_goal', { \n                      required: 'Calories goal is required',\n                      min: { value: 800, message: 'Minimum 800 calories' },\n                      max: { value: 5000, message: 'Maximum 5000 calories' }\n                    })}\n                    className={`input-field ${errors.calories_goal ? 'border-red-300 focus:ring-red-500' : ''}`}\n                  />\n                  {errors.calories_goal && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.calories_goal.message}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label htmlFor=\"protein_goal_g\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Protein (g)\n                  </label>\n                  <input\n                    id=\"protein_goal_g\"\n                    type=\"number\"\n                    {...register('protein_goal_g', { \n                      required: 'Protein goal is required',\n                      min: { value: 20, message: 'Minimum 20g protein' },\n                      max: { value: 500, message: 'Maximum 500g protein' }\n                    })}\n                    className={`input-field ${errors.protein_goal_g ? 'border-red-300 focus:ring-red-500' : ''}`}\n                  />\n                  {errors.protein_goal_g && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.protein_goal_g.message}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label htmlFor=\"carbs_goal_g\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Carbs (g)\n                  </label>\n                  <input\n                    id=\"carbs_goal_g\"\n                    type=\"number\"\n                    {...register('carbs_goal_g', { \n                      required: 'Carbs goal is required',\n                      min: { value: 20, message: 'Minimum 20g carbs' },\n                      max: { value: 1000, message: 'Maximum 1000g carbs' }\n                    })}\n                    className={`input-field ${errors.carbs_goal_g ? 'border-red-300 focus:ring-red-500' : ''}`}\n                  />\n                  {errors.carbs_goal_g && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.carbs_goal_g.message}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label htmlFor=\"fat_goal_g\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Fat (g)\n                  </label>\n                  <input\n                    id=\"fat_goal_g\"\n                    type=\"number\"\n                    {...register('fat_goal_g', { \n                      required: 'Fat goal is required',\n                      min: { value: 20, message: 'Minimum 20g fat' },\n                      max: { value: 200, message: 'Maximum 200g fat' }\n                    })}\n                    className={`input-field ${errors.fat_goal_g ? 'border-red-300 focus:ring-red-500' : ''}`}\n                  />\n                  {errors.fat_goal_g && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.fat_goal_g.message}</p>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label htmlFor=\"fiber_goal_g\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Fiber (g)\n                  </label>\n                  <input\n                    id=\"fiber_goal_g\"\n                    type=\"number\"\n                    {...register('fiber_goal_g', { \n                      required: 'Fiber goal is required',\n                      min: { value: 10, message: 'Minimum 10g fiber' },\n                      max: { value: 100, message: 'Maximum 100g fiber' }\n                    })}\n                    className={`input-field ${errors.fiber_goal_g ? 'border-red-300 focus:ring-red-500' : ''}`}\n                  />\n                  {errors.fiber_goal_g && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.fiber_goal_g.message}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label htmlFor=\"sugar_goal_g\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Sugar (g)\n                  </label>\n                  <input\n                    id=\"sugar_goal_g\"\n                    type=\"number\"\n                    {...register('sugar_goal_g', { \n                      required: 'Sugar goal is required',\n                      min: { value: 0, message: 'Minimum 0g sugar' },\n                      max: { value: 200, message: 'Maximum 200g sugar' }\n                    })}\n                    className={`input-field ${errors.sugar_goal_g ? 'border-red-300 focus:ring-red-500' : ''}`}\n                  />\n                  {errors.sugar_goal_g && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.sugar_goal_g.message}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label htmlFor=\"sodium_goal_mg\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Sodium (mg)\n                  </label>\n                  <input\n                    id=\"sodium_goal_mg\"\n                    type=\"number\"\n                    {...register('sodium_goal_mg', { \n                      required: 'Sodium goal is required',\n                      min: { value: 500, message: 'Minimum 500mg sodium' },\n                      max: { value: 5000, message: 'Maximum 5000mg sodium' }\n                    })}\n                    className={`input-field ${errors.sodium_goal_mg ? 'border-red-300 focus:ring-red-500' : ''}`}\n                  />\n                  {errors.sodium_goal_mg && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.sodium_goal_mg.message}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                type=\"button\"\n                onClick={closeForms}\n                className=\"btn-secondary\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"btn-primary\"\n              >\n                {isLoading ? 'Saving...' : (isCreating ? 'Create Goal' : 'Update Goal')}\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {/* Goals List */}\n      <div className=\"space-y-6\">\n        <div className=\"flex justify-between items-center\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">Your Goals</h2>\n          {!isCreating && !editingGoal && (\n            <button\n              onClick={openCreateForm}\n              className=\"btn-primary\"\n            >\n              <Plus className=\"inline-block w-4 h-4 mr-2\" />\n              Create New Goal\n            </button>\n          )}\n        </div>\n\n        {goals.length === 0 ? (\n          <div className=\"card text-center py-12\">\n            <Target className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No goals yet</h3>\n            <p className=\"text-gray-600 mb-4\">Create your first nutrition goal to get started</p>\n            <button\n              onClick={openCreateForm}\n              className=\"btn-primary\"\n            >\n              <Plus className=\"inline-block w-4 h-4 mr-2\" />\n              Create Your First Goal\n            </button>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {goals.map((goal) => (\n              <div\n                key={goal.id}\n                className={`card ${goal.is_active ? 'ring-2 ring-primary-500' : ''}`}\n              >\n                <div className=\"flex items-start justify-between mb-4\">\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900\">{goal.name}</h3>\n                    <p className=\"text-sm text-gray-500\">Created {goal.created_at}</p>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    {goal.is_active && (\n                      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                        Active\n                      </span>\n                    )}\n                    <button\n                      onClick={() => openEditForm(goal)}\n                      className=\"text-gray-400 hover:text-gray-600\"\n                    >\n                      <Edit className=\"h-4 w-4\" />\n                    </button>\n                    <button\n                      onClick={() => handleDeleteGoal(goal.id)}\n                      className=\"text-red-400 hover:text-red-600\"\n                    >\n                      <Trash2 className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n\n                {/* Goal Details */}\n                <div className=\"space-y-3\">\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                    <div>\n                      <span className=\"text-gray-500\">Calories:</span>\n                      <span className=\"ml-2 font-medium\">{goal.calories_goal}</span>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-500\">Protein:</span>\n                      <span className=\"ml-2 font-medium\">{goal.protein_goal_g}g</span>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-500\">Carbs:</span>\n                      <span className=\"ml-2 font-medium\">{goal.carbs_goal_g}g</span>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-500\">Fat:</span>\n                      <span className=\"ml-2 font-medium\">{goal.fat_goal_g}g</span>\n                    </div>\n                  </div>\n\n                  {goal.weight_goal_kg && (\n                    <div className=\"pt-3 border-t border-gray-200\">\n                      <span className=\"text-gray-500\">Target Weight:</span>\n                      <span className=\"ml-2 font-medium\">{goal.weight_goal_kg} kg</span>\n                    </div>\n                  )}\n\n                  {/* Action Buttons */}\n                  <div className=\"pt-3 border-t border-gray-200\">\n                    {!goal.is_active ? (\n                      <button\n                        onClick={() => handleActivateGoal(goal.id)}\n                        className=\"btn-primary w-full\"\n                      >\n                        <Activity className=\"inline-block w-4 h-4 mr-2\" />\n                        Activate Goal\n                      </button>\n                    ) : (\n                      <div className=\"text-center text-sm text-green-600 font-medium\">\n                        ✓ This is your active goal\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Goals;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}