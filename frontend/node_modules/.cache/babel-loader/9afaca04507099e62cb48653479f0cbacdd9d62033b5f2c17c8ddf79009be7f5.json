{"ast":null,"code":"import axios from'axios';// Create axios instance\nexport const api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:8000/api/v1',timeout:10000,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('access_token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Response interceptor to handle auth errors\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Token expired or invalid\nlocalStorage.removeItem('access_token');window.location.href='/login';}return Promise.reject(error);});// API endpoints\nexport const authAPI={login:credentials=>api.post('/auth/login',credentials),register:userData=>api.post('/auth/register',userData),me:()=>api.get('/auth/me'),refresh:()=>api.post('/auth/refresh')};export const userAPI={getProfile:()=>api.get('/users/profile'),updateProfile:profileData=>api.put('/users/profile',profileData),changePassword:passwordData=>api.post('/users/change-password',passwordData)};export const foodAPI={logFood:foodData=>api.post('/food/log',foodData),parseNaturalLanguage:(text,mealType)=>api.post('/food/parse',{text,meal_type:mealType}),logNaturalLanguage:foodEntry=>api.post('/food/log-natural',foodEntry),searchFoods:function(query){let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;return api.get('/food/search',{params:{query,limit}});},getFoodLogs:(date,mealType)=>api.get('/food/logs',{params:{date,meal_type:mealType}}),getFoodLog:id=>api.get(\"/food/log/\".concat(id))};export const nutritionAPI={createGoal:goalData=>api.post('/nutrition/goals',goalData),getGoals:()=>api.get('/nutrition/goals'),getCurrentGoal:()=>api.get('/nutrition/goals/current'),updateGoal:(id,goalData)=>api.put(\"/nutrition/goals/\".concat(id),goalData),deleteGoal:id=>api.delete(\"/nutrition/goals/\".concat(id)),activateGoal:id=>api.post(\"/nutrition/goals/\".concat(id,\"/activate\"))};export const dashboardAPI={getTodaySummary:()=>api.get('/dashboard/summary'),getDailySummary:date=>api.get(\"/dashboard/summary/\".concat(date)),getWeeklySummary:()=>api.get('/dashboard/weekly-summary'),getMonthlySummary:(year,month)=>api.get('/dashboard/monthly-summary',{params:{year,month}}),getProgressData:function(){let days=arguments.length>0&&arguments[0]!==undefined?arguments[0]:30;return api.get('/dashboard/progress',{params:{days}});},getInsights:()=>api.get('/dashboard/insights')};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","me","get","refresh","userAPI","getProfile","updateProfile","profileData","put","changePassword","passwordData","foodAPI","logFood","foodData","parseNaturalLanguage","text","mealType","meal_type","logNaturalLanguage","foodEntry","searchFoods","query","limit","arguments","length","undefined","params","getFoodLogs","date","getFoodLog","id","nutritionAPI","createGoal","goalData","getGoals","getCurrentGoal","updateGoal","deleteGoal","delete","activateGoal","dashboardAPI","getTodaySummary","getDailySummary","getWeeklySummary","getMonthlySummary","year","month","getProgressData","days","getInsights"],"sources":["/Users/mtejeshx37/Documents/2nd Year/Sem 3/Project/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('access_token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API endpoints\nexport const authAPI = {\n  login: (credentials: { email: string; password: string }) =>\n    api.post('/auth/login', credentials),\n  register: (userData: any) => api.post('/auth/register', userData),\n  me: () => api.get('/auth/me'),\n  refresh: () => api.post('/auth/refresh'),\n};\n\nexport const userAPI = {\n  getProfile: () => api.get('/users/profile'),\n  updateProfile: (profileData: any) => api.put('/users/profile', profileData),\n  changePassword: (passwordData: any) => api.post('/users/change-password', passwordData),\n};\n\nexport const foodAPI = {\n  logFood: (foodData: any) => api.post('/food/log', foodData),\n  parseNaturalLanguage: (text: string, mealType?: string) =>\n    api.post('/food/parse', { text, meal_type: mealType }),\n  logNaturalLanguage: (foodEntry: any) => api.post('/food/log-natural', foodEntry),\n  searchFoods: (query: string, limit = 20) =>\n    api.get('/food/search', { params: { query, limit } }),\n  getFoodLogs: (date?: string, mealType?: string) =>\n    api.get('/food/logs', { params: { date, meal_type: mealType } }),\n  getFoodLog: (id: number) => api.get(`/food/log/${id}`),\n};\n\nexport const nutritionAPI = {\n  createGoal: (goalData: any) => api.post('/nutrition/goals', goalData),\n  getGoals: () => api.get('/nutrition/goals'),\n  getCurrentGoal: () => api.get('/nutrition/goals/current'),\n  updateGoal: (id: number, goalData: any) => api.put(`/nutrition/goals/${id}`, goalData),\n  deleteGoal: (id: number) => api.delete(`/nutrition/goals/${id}`),\n  activateGoal: (id: number) => api.post(`/nutrition/goals/${id}/activate`),\n};\n\nexport const dashboardAPI = {\n  getTodaySummary: () => api.get('/dashboard/summary'),\n  getDailySummary: (date: string) => api.get(`/dashboard/summary/${date}`),\n  getWeeklySummary: () => api.get('/dashboard/weekly-summary'),\n  getMonthlySummary: (year: number, month: number) =>\n    api.get('/dashboard/monthly-summary', { params: { year, month } }),\n  getProgressData: (days = 30) => api.get('/dashboard/progress', { params: { days } }),\n  getInsights: () => api.get('/dashboard/insights'),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}