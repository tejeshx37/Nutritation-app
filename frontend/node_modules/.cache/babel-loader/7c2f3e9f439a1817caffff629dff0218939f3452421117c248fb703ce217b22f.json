{"ast":null,"code":"import _objectSpread from\"/Users/mtejeshx37/Documents/2nd Year/Sem 3/Project/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{useForm}from'react-hook-form';import{Search,Plus,MessageSquare,Calendar,Clock,Utensils}from'lucide-react';import toast from'react-hot-toast';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FoodLog=()=>{const[activeTab,setActiveTab]=useState('natural');const[searchQuery,setSearchQuery]=useState('');const[searchResults,setSearchResults]=useState([]);const[isSearching,setIsSearching]=useState(false);const[selectedFood,setSelectedFood]=useState(null);const{register,handleSubmit,reset,formState:{errors}}=useForm();// Set default values\nReact.useEffect(()=>{const today=new Date().toISOString().split('T')[0];const now=new Date().toTimeString().slice(0,5);reset({date:today,time:now,mealType:'breakfast',unit:'g',quantity:100});},[reset]);const handleNaturalLanguageSubmit=async data=>{try{// TODO: Implement natural language parsing API call\ntoast.success('Food logged successfully!');reset();}catch(error){toast.error('Failed to log food');}};const handleManualSubmit=async data=>{if(!selectedFood){toast.error('Please select a food item');return;}try{// TODO: Implement manual food logging API call\ntoast.success('Food logged successfully!');reset();setSelectedFood(null);}catch(error){toast.error('Failed to log food');}};const handleSearch=async query=>{if(!query.trim()){setSearchResults([]);return;}setIsSearching(true);try{// TODO: Implement food search API call\n// For now, show mock results\nconst mockResults=[{id:'1',name:'Chicken Breast',calories_per_100g:165,protein_g:31,carbs_g:0,fat_g:3.6,fiber_g:0,sugar_g:0,sodium_mg:74},{id:'2',name:'Brown Rice',calories_per_100g:111,protein_g:2.6,carbs_g:23,fat_g:0.9,fiber_g:1.8,sugar_g:0.4,sodium_mg:5}];setSearchResults(mockResults);}catch(error){toast.error('Search failed');}finally{setIsSearching(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900 mb-2\",children:\"Food Log\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Track your daily nutrition intake\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"border-b border-gray-200\",children:/*#__PURE__*/_jsxs(\"nav\",{className:\"-mb-px flex space-x-8\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setActiveTab('natural'),className:\"py-2 px-1 border-b-2 font-medium text-sm \".concat(activeTab==='natural'?'border-primary-500 text-primary-600':'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'),children:[/*#__PURE__*/_jsx(MessageSquare,{className:\"inline-block w-4 h-4 mr-2\"}),\"Natural Language\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setActiveTab('manual'),className:\"py-2 px-1 border-b-2 font-medium text-sm \".concat(activeTab==='manual'?'border-primary-500 text-primary-600':'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'),children:[/*#__PURE__*/_jsx(Plus,{className:\"inline-block w-4 h-4 mr-2\"}),\"Manual Entry\"]})]})})}),activeTab==='natural'&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4\",children:[/*#__PURE__*/_jsx(MessageSquare,{className:\"inline-block w-4 h-4 mr-2\"}),\"Log Food in Natural Language\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:\"Describe what you ate in plain English. For example: \\\"2 slices of whole wheat bread with 1 tablespoon of peanut butter\\\"\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(handleNaturalLanguageSubmit),className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"naturalLanguage\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"What did you eat?\"}),/*#__PURE__*/_jsx(\"textarea\",_objectSpread(_objectSpread({id:\"naturalLanguage\",rows:3},register('naturalLanguage',{required:'Please describe what you ate'})),{},{className:\"w-full input-field \".concat(errors.naturalLanguage?'border-red-300 focus:ring-red-500':''),placeholder:\"e.g., 2 slices of whole wheat bread with 1 tablespoon of peanut butter\"})),errors.naturalLanguage&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.naturalLanguage.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"date\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:[/*#__PURE__*/_jsx(Calendar,{className:\"inline-block w-4 h-4 mr-1\"}),\"Date\"]}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({id:\"date\",type:\"date\"},register('date',{required:'Date is required'})),{},{className:\"input-field\"}))]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"time\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:[/*#__PURE__*/_jsx(Clock,{className:\"inline-block w-4 h-4 mr-1\"}),\"Time\"]}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({id:\"time\",type:\"time\"},register('time',{required:'Time is required'})),{},{className:\"input-field\"}))]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"mealType\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:[/*#__PURE__*/_jsx(Utensils,{className:\"inline-block w-4 h-4 mr-1\"}),\"Meal Type\"]}),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({id:\"mealType\"},register('mealType',{required:'Meal type is required'})),{},{className:\"input-field\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"breakfast\",children:\"Breakfast\"}),/*#__PURE__*/_jsx(\"option\",{value:\"lunch\",children:\"Lunch\"}),/*#__PURE__*/_jsx(\"option\",{value:\"dinner\",children:\"Dinner\"}),/*#__PURE__*/_jsx(\"option\",{value:\"snack\",children:\"Snack\"})]}))]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn-primary w-full\",children:\"Log Food\"})]})]})}),activeTab==='manual'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4\",children:[/*#__PURE__*/_jsx(Search,{className:\"inline-block w-4 h-4 mr-2\"}),\"Search for Food\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchQuery,onChange:e=>setSearchQuery(e.target.value),placeholder:\"Search for food items...\",className:\"flex-1 input-field\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSearch(searchQuery),disabled:isSearching,className:\"btn-primary px-6\",children:isSearching?'Searching...':'Search'})]}),searchResults.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"Search Results:\"}),searchResults.map(food=>/*#__PURE__*/_jsx(\"div\",{onClick:()=>setSelectedFood(food),className:\"p-3 border rounded-lg cursor-pointer transition-colors \".concat((selectedFood===null||selectedFood===void 0?void 0:selectedFood.id)===food.id?'border-primary-500 bg-primary-50':'border-gray-200 hover:border-gray-300 hover:bg-gray-50'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-gray-900\",children:food.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[food.calories_per_100g,\" cal, \",food.protein_g,\"g protein, \",food.carbs_g,\"g carbs, \",food.fat_g,\"g fat\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right text-sm text-gray-500\",children:\"per 100g\"})]})},food.id))]})]})]}),selectedFood&&/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4\",children:[/*#__PURE__*/_jsx(Plus,{className:\"inline-block w-4 h-4 mr-2\"}),\"Log \",selectedFood.name]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(handleManualSubmit),className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"quantity\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Quantity\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({id:\"quantity\",type:\"number\",step:\"0.1\"},register('quantity',{required:'Quantity is required',min:{value:0.1,message:'Quantity must be positive'}})),{},{className:\"input-field\"}))]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"unit\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Unit\"}),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({id:\"unit\"},register('unit',{required:'Unit is required'})),{},{className:\"input-field\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"g\",children:\"grams (g)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"oz\",children:\"ounces (oz)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cup\",children:\"cups\"}),/*#__PURE__*/_jsx(\"option\",{value:\"tbsp\",children:\"tablespoons (tbsp)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"tsp\",children:\"teaspoons (tsp)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"piece\",children:\"pieces\"})]}))]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"mealType\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Meal Type\"}),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({id:\"mealType\"},register('mealType',{required:'Meal type is required'})),{},{className:\"input-field\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"breakfast\",children:\"Breakfast\"}),/*#__PURE__*/_jsx(\"option\",{value:\"lunch\",children:\"Lunch\"}),/*#__PURE__*/_jsx(\"option\",{value:\"dinner\",children:\"Dinner\"}),/*#__PURE__*/_jsx(\"option\",{value:\"snack\",children:\"Snack\"})]}))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"date\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Date\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({id:\"date\",type:\"date\"},register('date',{required:'Date is required'})),{},{className:\"input-field\"}))]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"time\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Time\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({id:\"time\",type:\"time\"},register('time',{required:'Time is required'})),{},{className:\"input-field\"}))]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn-primary w-full\",children:\"Log Food\"})]})]})]})]});};export default FoodLog;","map":{"version":3,"names":["React","useState","useForm","Search","Plus","MessageSquare","Calendar","Clock","Utensils","toast","jsx","_jsx","jsxs","_jsxs","FoodLog","activeTab","setActiveTab","searchQuery","setSearchQuery","searchResults","setSearchResults","isSearching","setIsSearching","selectedFood","setSelectedFood","register","handleSubmit","reset","formState","errors","useEffect","today","Date","toISOString","split","now","toTimeString","slice","date","time","mealType","unit","quantity","handleNaturalLanguageSubmit","data","success","error","handleManualSubmit","handleSearch","query","trim","mockResults","id","name","calories_per_100g","protein_g","carbs_g","fat_g","fiber_g","sugar_g","sodium_mg","className","children","onClick","concat","onSubmit","htmlFor","_objectSpread","rows","required","naturalLanguage","placeholder","message","type","value","onChange","e","target","disabled","length","map","food","step","min"],"sources":["/Users/mtejeshx37/Documents/2nd Year/Sem 3/Project/frontend/src/pages/FoodLog.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Search, Plus, MessageSquare, Calendar, Clock, Utensils } from 'lucide-react';\nimport toast from 'react-hot-toast';\n\ninterface FoodLogFormData {\n  naturalLanguage: string;\n  foodName: string;\n  quantity: number;\n  unit: string;\n  mealType: string;\n  date: string;\n  time: string;\n}\n\ninterface FoodItem {\n  id: string;\n  name: string;\n  calories_per_100g: number;\n  protein_g: number;\n  carbs_g: number;\n  fat_g: number;\n  fiber_g: number;\n  sugar_g: number;\n  sodium_mg: number;\n}\n\nconst FoodLog: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<'natural' | 'manual'>('natural');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState<FoodItem[]>([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [selectedFood, setSelectedFood] = useState<FoodItem | null>(null);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<FoodLogFormData>();\n\n  // Set default values\n  React.useEffect(() => {\n    const today = new Date().toISOString().split('T')[0];\n    const now = new Date().toTimeString().slice(0, 5);\n    reset({\n      date: today,\n      time: now,\n      mealType: 'breakfast',\n      unit: 'g',\n      quantity: 100,\n    });\n  }, [reset]);\n\n  const handleNaturalLanguageSubmit = async (data: FoodLogFormData) => {\n    try {\n      // TODO: Implement natural language parsing API call\n      toast.success('Food logged successfully!');\n      reset();\n    } catch (error) {\n      toast.error('Failed to log food');\n    }\n  };\n\n  const handleManualSubmit = async (data: FoodLogFormData) => {\n    if (!selectedFood) {\n      toast.error('Please select a food item');\n      return;\n    }\n\n    try {\n      // TODO: Implement manual food logging API call\n      toast.success('Food logged successfully!');\n      reset();\n      setSelectedFood(null);\n    } catch (error) {\n      toast.error('Failed to log food');\n    }\n  };\n\n  const handleSearch = async (query: string) => {\n    if (!query.trim()) {\n      setSearchResults([]);\n      return;\n    }\n\n    setIsSearching(true);\n    try {\n      // TODO: Implement food search API call\n      // For now, show mock results\n      const mockResults: FoodItem[] = [\n        {\n          id: '1',\n          name: 'Chicken Breast',\n          calories_per_100g: 165,\n          protein_g: 31,\n          carbs_g: 0,\n          fat_g: 3.6,\n          fiber_g: 0,\n          sugar_g: 0,\n          sodium_mg: 74,\n        },\n        {\n          id: '2',\n          name: 'Brown Rice',\n          calories_per_100g: 111,\n          protein_g: 2.6,\n          carbs_g: 23,\n          fat_g: 0.9,\n          fiber_g: 1.8,\n          sugar_g: 0.4,\n          sodium_mg: 5,\n        },\n      ];\n      setSearchResults(mockResults);\n    } catch (error) {\n      toast.error('Search failed');\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Food Log</h1>\n        <p className=\"text-gray-600\">Track your daily nutrition intake</p>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"mb-6\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8\">\n            <button\n              onClick={() => setActiveTab('natural')}\n              className={`py-2 px-1 border-b-2 font-medium text-sm ${\n                activeTab === 'natural'\n                  ? 'border-primary-500 text-primary-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              <MessageSquare className=\"inline-block w-4 h-4 mr-2\" />\n              Natural Language\n            </button>\n            <button\n              onClick={() => setActiveTab('manual')}\n              className={`py-2 px-1 border-b-2 font-medium text-sm ${\n                activeTab === 'manual'\n                  ? 'border-primary-500 text-primary-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              <Plus className=\"inline-block w-4 h-4 mr-2\" />\n              Manual Entry\n            </button>\n          </nav>\n        </div>\n      </div>\n\n      {/* Natural Language Tab */}\n      {activeTab === 'natural' && (\n        <div className=\"space-y-6\">\n          <div className=\"card\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n              <MessageSquare className=\"inline-block w-4 h-4 mr-2\" />\n              Log Food in Natural Language\n            </h3>\n            <p className=\"text-gray-600 mb-4\">\n              Describe what you ate in plain English. For example: \"2 slices of whole wheat bread with 1 tablespoon of peanut butter\"\n            </p>\n            \n            <form onSubmit={handleSubmit(handleNaturalLanguageSubmit)} className=\"space-y-4\">\n              <div>\n                <label htmlFor=\"naturalLanguage\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  What did you eat?\n                </label>\n                <textarea\n                  id=\"naturalLanguage\"\n                  rows={3}\n                  {...register('naturalLanguage', { required: 'Please describe what you ate' })}\n                  className={`w-full input-field ${\n                    errors.naturalLanguage ? 'border-red-300 focus:ring-red-500' : ''\n                  }`}\n                  placeholder=\"e.g., 2 slices of whole wheat bread with 1 tablespoon of peanut butter\"\n                />\n                {errors.naturalLanguage && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.naturalLanguage.message}</p>\n                )}\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label htmlFor=\"date\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    <Calendar className=\"inline-block w-4 h-4 mr-1\" />\n                    Date\n                  </label>\n                  <input\n                    id=\"date\"\n                    type=\"date\"\n                    {...register('date', { required: 'Date is required' })}\n                    className=\"input-field\"\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"time\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    <Clock className=\"inline-block w-4 h-4 mr-1\" />\n                    Time\n                  </label>\n                  <input\n                    id=\"time\"\n                    type=\"time\"\n                    {...register('time', { required: 'Time is required' })}\n                    className=\"input-field\"\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"mealType\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    <Utensils className=\"inline-block w-4 h-4 mr-1\" />\n                    Meal Type\n                  </label>\n                  <select\n                    id=\"mealType\"\n                    {...register('mealType', { required: 'Meal type is required' })}\n                    className=\"input-field\"\n                  >\n                    <option value=\"breakfast\">Breakfast</option>\n                    <option value=\"lunch\">Lunch</option>\n                    <option value=\"dinner\">Dinner</option>\n                    <option value=\"snack\">Snack</option>\n                  </select>\n                </div>\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"btn-primary w-full\"\n              >\n                Log Food\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Manual Entry Tab */}\n      {activeTab === 'manual' && (\n        <div className=\"space-y-6\">\n          {/* Food Search */}\n          <div className=\"card\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n              <Search className=\"inline-block w-4 h-4 mr-2\" />\n              Search for Food\n            </h3>\n            \n            <div className=\"space-y-4\">\n              <div className=\"flex space-x-2\">\n                <input\n                  type=\"text\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search for food items...\"\n                  className=\"flex-1 input-field\"\n                />\n                <button\n                  onClick={() => handleSearch(searchQuery)}\n                  disabled={isSearching}\n                  className=\"btn-primary px-6\"\n                >\n                  {isSearching ? 'Searching...' : 'Search'}\n                </button>\n              </div>\n\n              {/* Search Results */}\n              {searchResults.length > 0 && (\n                <div className=\"space-y-2\">\n                  <h4 className=\"font-medium text-gray-900\">Search Results:</h4>\n                  {searchResults.map((food) => (\n                    <div\n                      key={food.id}\n                      onClick={() => setSelectedFood(food)}\n                      className={`p-3 border rounded-lg cursor-pointer transition-colors ${\n                        selectedFood?.id === food.id\n                          ? 'border-primary-500 bg-primary-50'\n                          : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                      }`}\n                    >\n                      <div className=\"flex justify-between items-start\">\n                        <div>\n                          <h5 className=\"font-medium text-gray-900\">{food.name}</h5>\n                          <p className=\"text-sm text-gray-600\">\n                            {food.calories_per_100g} cal, {food.protein_g}g protein, {food.carbs_g}g carbs, {food.fat_g}g fat\n                          </p>\n                        </div>\n                        <div className=\"text-right text-sm text-gray-500\">\n                          per 100g\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Manual Entry Form */}\n          {selectedFood && (\n            <div className=\"card\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                <Plus className=\"inline-block w-4 h-4 mr-2\" />\n                Log {selectedFood.name}\n              </h3>\n              \n              <form onSubmit={handleSubmit(handleManualSubmit)} className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div>\n                    <label htmlFor=\"quantity\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Quantity\n                    </label>\n                    <input\n                      id=\"quantity\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      {...register('quantity', { \n                        required: 'Quantity is required',\n                        min: { value: 0.1, message: 'Quantity must be positive' }\n                      })}\n                      className=\"input-field\"\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"unit\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Unit\n                    </label>\n                    <select\n                      id=\"unit\"\n                      {...register('unit', { required: 'Unit is required' })}\n                      className=\"input-field\"\n                    >\n                      <option value=\"g\">grams (g)</option>\n                      <option value=\"oz\">ounces (oz)</option>\n                      <option value=\"cup\">cups</option>\n                      <option value=\"tbsp\">tablespoons (tbsp)</option>\n                      <option value=\"tsp\">teaspoons (tsp)</option>\n                      <option value=\"piece\">pieces</option>\n                    </select>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"mealType\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Meal Type\n                    </label>\n                    <select\n                      id=\"mealType\"\n                      {...register('mealType', { required: 'Meal type is required' })}\n                      className=\"input-field\"\n                    >\n                      <option value=\"breakfast\">Breakfast</option>\n                      <option value=\"lunch\">Lunch</option>\n                      <option value=\"dinner\">Dinner</option>\n                      <option value=\"snack\">Snack</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label htmlFor=\"date\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Date\n                    </label>\n                    <input\n                      id=\"date\"\n                      type=\"date\"\n                      {...register('date', { required: 'Date is required' })}\n                      className=\"input-field\"\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"time\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Time\n                    </label>\n                    <input\n                      id=\"time\"\n                      type=\"time\"\n                      {...register('time', { required: 'Time is required' })}\n                      className=\"input-field\"\n                    />\n                  </div>\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"btn-primary w-full\"\n                >\n                  Log Food\n                </button>\n              </form>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FoodLog;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}